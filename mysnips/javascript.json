{
  "Class": {
    "prefix": ["class"],
    "body": [
      "/**",
      " * @author ${VIM:\\$USER}",
      " */",
      "class $1 ${2:extends ${3:Parent} }{",
      "\tconstructor(props) {",
      "\t\tsuper(props)",
      "\t\t$0",
      "\t}",
      "}",
      "",
      "export default $1"
    ],
    "description": "Class definition template."
  },
  "Function component": {
    "prefix": "fc",
    "body": [
      "const $0 = ($1) => {",
      "  $2",
      "}",
      "",
      "export default $0"
    ]
  },
  "Switch Statement": {
    "prefix": "switch",
    "body": [
      "switch (${1:key}) {",
      "\tcase ${2:value}:",
      "\t\t$0",
      "\t\tbreak;",
      "",
      "\tdefault:",
      "\t\tbreak;",
      "}"
    ],
    "description": "Switch Statement"
  },
  "Log": {
    "prefix": "log",
    "body": "console.log($0)"
  },
  "Jest describe": {
    "prefix": "jd",
    "body": [
      "describe('$0', () => {",
      "  $1",
      "})"
    ]
  },
  "Jest test": {
    "prefix": "ji",
    "body": [
      "it('$0', () => {",
      "  $1",
      "})"
    ]
  },
  "Jest before all": {
    "prefix": "jba",
    "body": [
      "beforeAll(() => {",
      "  $0",
      "})"
    ]
  },
  "Jest before each": {
    "prefix": "jbe",
    "body": [
      "beforeEach(() => {",
      "  $0",
      "})"
    ]
  },
  "Jest after all": {
    "prefix": "jaa",
    "body": [
      "afterAll(() => {",
      "  $0",
      "})"
    ]
  },
  "Jest after each": {
    "prefix": "jae",
    "body": [
      "afterEach(() => {",
      "  $0",
      "})"
    ]
  }
}
